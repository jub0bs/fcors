name: build

on: [push]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: [1.23, 1.24]
    name: Tests ${{ matrix.os }} @ Go ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4.2.2
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5.4.0
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: Display Go version
        run: go version
      - name: Test
        run: go test -v -coverpkg=./... -coverprofile=cover.out ./...
      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v5.4.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          fail_ci_if_error: true
  benchmark:
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: [1.23, 1.24]
    name: Benchmark comparison ${{ matrix.os }} @ Go ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code (new)
        uses: actions/checkout@v4.2.2
        with:
          path: new
          fetch-depth: '0' # fetch all history for all branches and tags
      - name: Retrieve latest tag
        id: latest-tag
        run: |
          cd new
          echo "LATEST_TAG=$(git for-each-ref --sort=-version:refname --format='%(refname:lstrip=2)' --count=1 refs/tags)" >> "$GITHUB_OUTPUT"
      - name: Check out Code (previous)
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ steps.latest-tag.outputs.LATEST_TAG }}
          path: previous
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5.4.0
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install benchstat
        run: go install golang.org/x/perf/cmd/benchstat@latest
      - name: Run Benchmark (previous)
        run: |
          cd previous
          go test -run=^$ -bench=. -count=10 . -benchtime 100000x > benchmark.txt
      - name: Run Benchmark (new)
        run: |
          cd new
          go test -run=^$ -bench=. -count=10 . -benchtime 100000x > benchmark.txt
      - name: Run benchstat
        run: |
          benchstat previous/benchmark.txt new/benchmark.txt
