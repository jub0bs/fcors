name: build

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.20.x' ]
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: Display Go version
        run: go version
      - name: Test
        run: go test -v -coverpkg=./... -coverprofile=cover.out ./... 
      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
  benchmark:
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: [1.20.x]
    name: Benchmark comparison ${{ matrix.os }} @ Go ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code (previous)
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}
          path: previous
      - name: Checkout Code (new)
        uses: actions/checkout@v3
        with:
          path: new
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install benchstat
        run: go install golang.org/x/perf/cmd/benchstat@latest
      - name: Run Benchmark (previous)
        run: |
          cd previous
          go test -run=^$ -bench=. -count=10 . > benchmark.txt
      - name: Run Benchmark (new)
        run: |
          cd new
          go test -run=^$ -bench=. -count=10 . > benchmark.txt
      - name: Run benchstat
        run: |
          benchstat previous/benchmark.txt new/benchmark.txt